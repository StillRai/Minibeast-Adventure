[{"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/index.js":"1","/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/App.js":"2","/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/reportWebVitals.js":"3","/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/MinibeastApp.js":"4","/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/EnglishGame.js":"5","/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/MathGame.js":"6","/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/PhonicsGame.js":"7"},{"size":535,"mtime":1681299262000,"results":"8","hashOfConfig":"9"},{"size":218,"mtime":1681299262000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1681299262000,"results":"11","hashOfConfig":"9"},{"size":4327,"mtime":1681314642503,"results":"12","hashOfConfig":"9"},{"size":6866,"mtime":1681314845963,"results":"13","hashOfConfig":"9"},{"size":6988,"mtime":1681299262000,"results":"14","hashOfConfig":"9"},{"size":7697,"mtime":1681299262000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zio1ba",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/index.js",[],[],"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/App.js",[],[],"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/reportWebVitals.js",[],[],"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/MinibeastApp.js",["38","39","40"],[],"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/EnglishGame.js",["41","42"],[],"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/MathGame.js",[],[],"/Users/rai/Desktop/Minibeast-Adventures/Minibeast-Adventure/src/components/PhonicsGame.js",["43","44","45","46","47","48"],[],"import React, { useState, useEffect, useCallback } from 'react';\nimport correctSound from '../sounds/correct.mp3';\nimport incorrectSound from '../sounds/incorrect.mp3';\nimport './PhonicsGame.css';\nimport antImg from '../images/ant.png';\nimport beetleImg from '../images/beetle.png';\nimport butterflyImg from '../images/butterfly.png';\nimport dragonflyImg from '../images/dragonfly.png';\nimport spiderImg from '../images/spider.png';\nimport beeImg from '../images/bee.png';\nimport flyImg from '../images/fly.png';\nimport ladybirdImg from '../images/ladybird.png';\nimport wormImg from '../images/worm.png';\nimport throttle from 'lodash.throttle';\n\nfunction PhonicsGame() {\n  const [question, setQuestion] = useState('');\n  const [result, setResult] = useState('');\n  const [correctCount, setCorrectCount] = useState(0);\n  const [incorrectCount, setIncorrectCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [isCheckDisabled, setIsCheckDisabled] = useState(true);\n  const [audio, setAudio] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n\n  const playAudio = (src) => {\n    if (audio) {\n      audio.pause();\n    }\n    const newAudio = new Audio(src);\n    newAudio.play();\n    setAudio(newAudio);\n  };\n\n  const stopAudio = () => {\n    if (audio) {\n      audio.pause();\n      setAudio(null);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (audio) {\n        audio.pause();\n      }\n    };\n  }, [audio]);\n\n  const questions = [\n    { id: 1, question: 'What is the name of this insect?', image: antImg, answer: 'Ant' },\n    { id: 2, question: 'What is the name of this insect?', image: beetleImg, answer: 'Beetle' },\n    { id: 3, question: 'What is the name of this insect?', image: butterflyImg, answer: 'Butterfly' },\n    { id: 4, question: 'What is the name of this insect?', image: dragonflyImg, answer: 'Dragonfly' },\n    { id: 5, question: 'What is the name of this insect?', image: spiderImg, answer: 'Spider' },\n    { id: 6, question: 'What is the name of this insect?', image: beeImg, answer: 'Bee' },\n    { id: 7, question: 'What is the name of this insect?', image: flyImg, answer: 'Fly' },\n    { id: 8, question: 'What is the name of this insect?', image: ladybirdImg, answer: 'Ladybird' },\n    { id: 9, question: 'What is the name of this insect?', image: wormImg, answer: 'Worm' },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n\n  const generateRandomQuestion = useCallback(() => {\n    let newQuestion;\n    do {\n      newQuestion = questions[Math.floor(Math.random() * questions.length)];\n    } while (currentQuestion && newQuestion.id === currentQuestion.id);\n    setQuestion(newQuestion.question);\n    setResult('');\n    setInputValue('');\n    setCurrentQuestion(newQuestion);\n    setIsCheckDisabled(true);\n    return newQuestion;\n  }, [currentQuestion]);\n\n  useEffect(() => {\n    const newQuestion = generateRandomQuestion();\n    setCurrentQuestion(newQuestion);\n  }, []);\n\n  useEffect(() => {\n    if (result !== '') {\n      const timer = setTimeout(() => {\n        const newQuestion = generateRandomQuestion();\n        setCurrentQuestion(newQuestion);\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [result, generateRandomQuestion]);\n\n  const checkAnswer = () => {\n    if (!currentQuestion) {\n      return;\n    }\n    const currentImage = currentQuestion.image;\n    const correctAnswer = currentQuestion.answer.toUpperCase();\n    const isCorrectAnswer = inputValue.toLowerCase() === correctAnswer.toLowerCase();\n    if (isCorrectAnswer) {\n      setInputValue('Correct!')\n      setCorrectCount(correctCount + 1);\n      new Audio(correctSound).play();\n          setTimeout(() => {\n            setResult(\"\");\n            }, 2000);\n    } else {\n      setInputValue(`Incorrect. The answer is ${correctAnswer}.`);\n      setIncorrectCount(incorrectCount + 1);\n      new Audio(incorrectSound).play();\n      setTimeout(() => {\n      setResult(\"\");\n    }, 2000);\n    }\n\n    setShowResult(true); \n    setTimeout(() => {\n      setShowResult(false);\n      generateRandomQuestion();\n    }, 2000);\n\n    const checkButton = document.querySelector('.Check');\n    if (checkButton && checkButton.classList) {\n      checkButton.classList.add('disabled');\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const previousValue = inputValue;\n    const newValue = event.target.value;\n\n    setInputValue(newValue);\n    setIsCheckDisabled(false);\n\n    if (newValue.length > previousValue.length) {\n      const newLetter = newValue.slice(-1).toUpperCase();\n      playLetterSound(newLetter);\n    }\n  };\n\n  const playLetterSound = async (letter) => {\n    const audioPath = await import(`../sounds/${letter}.mp3`);\n    new Audio(audioPath.default).play();\n  };\n\n  const handleKeyPress = useCallback(\n    throttle((event) => {\n      if (inputValue === '') {\n        return;\n      }\n      const keyPressed = event.key.toUpperCase();\n      const lastLetter = inputValue.slice(-1).toUpperCase();\n\n      if (keyPressed === lastLetter) {\n        const newInputValue = inputValue.slice(0, -1);\n        setInputValue(newInputValue);\n        checkAnswer();\n        playLetterSound(lastLetter);\n      } else {\n        playLetterSound(keyPressed);\n      }\n    }, 300),\n    [inputValue, checkAnswer, playLetterSound]\n  );\n\n  const addLetter = (letter) => {\n    setInputValue(inputValue + letter);\n    setIsCheckDisabled(false);\n    playLetterSound(letter);\n  };\n\n  const eraseLetter = () => {\n    setInputValue(inputValue.slice(0, -1));\n    setIsCheckDisabled(false);\n  };\n\n  const nextQuestion = () => {\n    generateRandomQuestion();\n  };\n\n  return (\n    <>\n      <div className=\"PhonicsGame\">\n        <h1 className=\"Title\">Minibeast Phonics</h1>\n        <div>\n          <div className=\"BodyText\">{question}</div>\n          {currentQuestion && (\n            <img src={currentQuestion.image} alt=\"Insect\" key={currentQuestion.id} />\n          )}\n          <div className=\"input-check-container\">\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              onKeyDown={(e) => e.key === 'Enter' && checkAnswer()}\n              placeholder=\"Enter answer\"\n            />\n            {showResult && ( \n              <div className=\"result\">{result}</div>\n            )}\n            <button\n              className=\"Check\"\n              onClick={checkAnswer}\n              onMouseEnter={() => playAudio(process.env.PUBLIC_URL + '/sounds/check.mp3')}\n              onMouseLeave={stopAudio}\n            >\n              Check\n            </button>\n          </div>\n\n          <div className=\"buttons-container\">\n            {'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map((letter) => (\n              <button key={letter} onClick={() => addLetter(letter)}>\n                {letter}\n              </button>\n            ))}\n            <button\n              className=\"Erase\"\n              onClick={eraseLetter}\n              onMouseEnter={() => playAudio(process.env.PUBLIC_URL + '/sounds/erase.mp3')}\n              onMouseLeave={stopAudio}\n            >\n              Erase\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"score\">\n        <div>\n          Correct: {correctCount}  |  Incorrect: {incorrectCount}\n        </div>\n      </div>\n      <div className=\"start-button-container\">\n        <button\n          className=\"start-button\"\n          onClick={nextQuestion}\n          onMouseEnter={() => playAudio(process.env.PUBLIC_URL + '/sounds/new_question.mp3')}\n          onMouseLeave={stopAudio}\n        >\n          New question\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default PhonicsGame;",{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":27,"column":9,"nodeType":"51","messageId":"52","endLine":27,"endColumn":18},{"ruleId":"49","severity":1,"message":"54","line":46,"column":9,"nodeType":"51","messageId":"52","endLine":46,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":62,"column":20,"nodeType":"51","messageId":"57","endLine":62,"endColumn":42},{"ruleId":"58","severity":1,"message":"59","line":107,"column":6,"nodeType":"60","endLine":107,"endColumn":28,"suggestions":"61"},{"ruleId":"49","severity":1,"message":"62","line":22,"column":10,"nodeType":"51","messageId":"52","endLine":22,"endColumn":25},{"ruleId":"58","severity":1,"message":"63","line":75,"column":6,"nodeType":"60","endLine":75,"endColumn":23,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"65","line":80,"column":6,"nodeType":"60","endLine":80,"endColumn":8,"suggestions":"66"},{"ruleId":"49","severity":1,"message":"67","line":96,"column":11,"nodeType":"51","messageId":"52","endLine":96,"endColumn":23},{"ruleId":"49","severity":1,"message":"68","line":145,"column":9,"nodeType":"51","messageId":"52","endLine":145,"endColumn":23},{"ruleId":"58","severity":1,"message":"69","line":145,"column":26,"nodeType":"51","endLine":145,"endColumn":37},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'playAudio' is assigned a value but never used.","'stopAudio' is assigned a value but never used.","no-use-before-define","'generateRandomQuestion' was used before it was defined.","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'generateOptions'. Either include it or remove the dependency array.","ArrayExpression",["70"],"'isCheckDisabled' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'questions'. Either include it or remove the dependency array.",["71"],"React Hook useEffect has a missing dependency: 'generateRandomQuestion'. Either include it or remove the dependency array.",["72"],"'currentImage' is assigned a value but never used.","'handleKeyPress' is assigned a value but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [questions, generateOptions, playAudio]",{"range":"79","text":"80"},"Update the dependencies array to be: [currentQuestion, questions]",{"range":"81","text":"82"},"Update the dependencies array to be: [generateRandomQuestion]",{"range":"83","text":"84"},[5106,5128],"[questions, generateOptions, playAudio]",[2837,2854],"[currentQuestion, questions]",[2970,2972],"[generateRandomQuestion]"]