{"ast":null,"code":"var _jsxFileName = \"/Users/rai/Desktop/Minibeast-Adventures/src/components/PhonicsGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport correctSound from '../sounds/correct.mp3';\nimport incorrectSound from '../sounds/incorrect.mp3';\nimport './PhonicsGame.css';\nimport antImg from '../images/ant.png';\nimport beetleImg from '../images/beetle.png';\nimport butterflyImg from '../images/butterfly.png';\nimport dragonflyImg from '../images/dragonfly.png';\nimport spiderImg from '../images/spider.png';\nimport beeImg from '../images/bee.png';\nimport flyImg from '../images/fly.png';\nimport ladybirdImg from '../images/ladybird.png';\nimport wormImg from '../images/worm.png';\nimport throttle from 'lodash.throttle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PhonicsGame() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [result, setResult] = useState('');\n  const [correctCount, setCorrectCount] = useState(0);\n  const [incorrectCount, setIncorrectCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [isCheckDisabled, setIsCheckDisabled] = useState(true);\n  const [audio, setAudio] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const playAudio = src => {\n    if (audio) {\n      audio.pause();\n    }\n    const newAudio = new Audio(src);\n    newAudio.play();\n    setAudio(newAudio);\n  };\n  const stopAudio = () => {\n    if (audio) {\n      audio.pause();\n      setAudio(null);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (audio) {\n        audio.pause();\n      }\n    };\n  }, [audio]);\n  const questions = [{\n    id: 1,\n    question: 'What is the name of this insect?',\n    image: antImg,\n    answer: 'Ant'\n  }, {\n    id: 2,\n    question: 'What is the name of this insect?',\n    image: beetleImg,\n    answer: 'Beetle'\n  }, {\n    id: 3,\n    question: 'What is the name of this insect?',\n    image: butterflyImg,\n    answer: 'Butterfly'\n  }, {\n    id: 4,\n    question: 'What is the name of this insect?',\n    image: dragonflyImg,\n    answer: 'Dragonfly'\n  }, {\n    id: 5,\n    question: 'What is the name of this insect?',\n    image: spiderImg,\n    answer: 'Spider'\n  }, {\n    id: 6,\n    question: 'What is the name of this insect?',\n    image: beeImg,\n    answer: 'Bee'\n  }, {\n    id: 7,\n    question: 'What is the name of this insect?',\n    image: flyImg,\n    answer: 'Fly'\n  }, {\n    id: 8,\n    question: 'What is the name of this insect?',\n    image: ladybirdImg,\n    answer: 'Ladybird'\n  }, {\n    id: 9,\n    question: 'What is the name of this insect?',\n    image: wormImg,\n    answer: 'Worm'\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const generateRandomQuestion = useCallback(() => {\n    let newQuestion;\n    do {\n      newQuestion = questions[Math.floor(Math.random() * questions.length)];\n    } while (currentQuestion && newQuestion.id === currentQuestion.id);\n    setQuestion(newQuestion.question);\n    setResult('');\n    setInputValue('');\n    setCurrentQuestion(newQuestion);\n    setIsCheckDisabled(true);\n    return newQuestion;\n  }, [currentQuestion]);\n  useEffect(() => {\n    const newQuestion = generateRandomQuestion();\n    setCurrentQuestion(newQuestion);\n  }, []);\n  useEffect(() => {\n    if (result !== '') {\n      const timer = setTimeout(() => {\n        const newQuestion = generateRandomQuestion();\n        setCurrentQuestion(newQuestion);\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [result, generateRandomQuestion]);\n  const checkAnswer = () => {\n    if (!currentQuestion) {\n      return;\n    }\n    const currentImage = currentQuestion.image;\n    const correctAnswer = currentQuestion.answer.toUpperCase();\n    const isCorrectAnswer = inputValue.toLowerCase() === correctAnswer.toLowerCase();\n    if (isCorrectAnswer) {\n      setInputValue('Correct!');\n      setCorrectCount(correctCount + 1);\n      new Audio(correctSound).play();\n      setTimeout(() => {\n        setResult(\"\");\n      }, 2000);\n    } else {\n      setInputValue(`Incorrect. The answer is ${correctAnswer}.`);\n      setIncorrectCount(incorrectCount + 1);\n      new Audio(incorrectSound).play();\n      setTimeout(() => {\n        setResult(\"\");\n      }, 2000);\n    }\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      generateRandomQuestion();\n    }, 2000);\n    const checkButton = document.querySelector('.Check');\n    if (checkButton && checkButton.classList) {\n      checkButton.classList.add('disabled');\n    }\n  };\n  const handleInputChange = event => {\n    const previousValue = inputValue;\n    const newValue = event.target.value;\n    setInputValue(newValue);\n    setIsCheckDisabled(false);\n    if (newValue.length > previousValue.length) {\n      const newLetter = newValue.slice(-1).toUpperCase();\n      playLetterSound(newLetter);\n    }\n  };\n  const playLetterSound = async letter => {\n    const audioPath = await import(`../sounds/${letter}.mp3`);\n    new Audio(audioPath.default).play();\n  };\n  const handleKeyPress = useCallback(throttle(event => {\n    if (inputValue === '') {\n      return;\n    }\n    const keyPressed = event.key.toUpperCase();\n    const lastLetter = inputValue.slice(-1).toUpperCase();\n    if (keyPressed === lastLetter) {\n      const newInputValue = inputValue.slice(0, -1);\n      setInputValue(newInputValue);\n      checkAnswer();\n      playLetterSound(lastLetter);\n    } else {\n      playLetterSound(keyPressed);\n    }\n  }, 300), [inputValue, checkAnswer, playLetterSound]);\n  const addLetter = letter => {\n    setInputValue(inputValue + letter);\n    setIsCheckDisabled(false);\n    playLetterSound(letter);\n  };\n  const eraseLetter = () => {\n    setInputValue(inputValue.slice(0, -1));\n    setIsCheckDisabled(false);\n  };\n  const nextQuestion = () => {\n    generateRandomQuestion();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PhonicsGame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: \"Minibeast Phonics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BodyText\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentQuestion.image,\n          alt: \"Insect\"\n        }, currentQuestion.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-check-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange,\n            onKeyDown: e => e.key === 'Enter' && checkAnswer(),\n            placeholder: \"Enter answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result\",\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Check\",\n            onClick: checkAnswer,\n            onMouseEnter: () => playAudio(process.env.PUBLIC_URL + '/sounds/check.mp3'),\n            onMouseLeave: stopAudio,\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: ['ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addLetter(letter),\n            children: letter\n          }, letter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Erase\",\n            onClick: eraseLetter,\n            onMouseEnter: () => playAudio(process.env.PUBLIC_URL + '/sounds/erase.mp3'),\n            onMouseLeave: stopAudio,\n            children: \"Erase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Correct: \", correctCount, \"\\u2003 | \\u2003Incorrect: \", incorrectCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: nextQuestion,\n        onMouseEnter: () => playAudio(process.env.PUBLIC_URL + '/sounds/new_question.mp3'),\n        onMouseLeave: stopAudio,\n        children: \"New question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PhonicsGame, \"Fa3mjPOeguBX8gRIaFbdBJdv8cY=\");\n_c = PhonicsGame;\nexport default PhonicsGame;\nvar _c;\n$RefreshReg$(_c, \"PhonicsGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","correctSound","incorrectSound","antImg","beetleImg","butterflyImg","dragonflyImg","spiderImg","beeImg","flyImg","ladybirdImg","wormImg","throttle","jsxDEV","_jsxDEV","Fragment","_Fragment","PhonicsGame","_s","question","setQuestion","result","setResult","correctCount","setCorrectCount","incorrectCount","setIncorrectCount","inputValue","setInputValue","isCheckDisabled","setIsCheckDisabled","audio","setAudio","showResult","setShowResult","playAudio","src","pause","newAudio","Audio","play","stopAudio","questions","id","image","answer","currentQuestion","setCurrentQuestion","generateRandomQuestion","newQuestion","Math","floor","random","length","timer","setTimeout","clearTimeout","checkAnswer","currentImage","correctAnswer","toUpperCase","isCorrectAnswer","toLowerCase","checkButton","document","querySelector","classList","add","handleInputChange","event","previousValue","newValue","target","value","newLetter","slice","playLetterSound","letter","audioPath","default","handleKeyPress","keyPressed","key","lastLetter","newInputValue","addLetter","eraseLetter","nextQuestion","children","className","fileName","_jsxFileName","lineNumber","columnNumber","alt","type","onChange","onKeyDown","e","placeholder","onClick","onMouseEnter","process","env","PUBLIC_URL","onMouseLeave","split","map","_c","$RefreshReg$"],"sources":["/Users/rai/Desktop/Minibeast-Adventures/src/components/PhonicsGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport correctSound from '../sounds/correct.mp3';\nimport incorrectSound from '../sounds/incorrect.mp3';\nimport './PhonicsGame.css';\nimport antImg from '../images/ant.png';\nimport beetleImg from '../images/beetle.png';\nimport butterflyImg from '../images/butterfly.png';\nimport dragonflyImg from '../images/dragonfly.png';\nimport spiderImg from '../images/spider.png';\nimport beeImg from '../images/bee.png';\nimport flyImg from '../images/fly.png';\nimport ladybirdImg from '../images/ladybird.png';\nimport wormImg from '../images/worm.png';\nimport throttle from 'lodash.throttle';\n\nfunction PhonicsGame() {\n  const [question, setQuestion] = useState('');\n  const [result, setResult] = useState('');\n  const [correctCount, setCorrectCount] = useState(0);\n  const [incorrectCount, setIncorrectCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [isCheckDisabled, setIsCheckDisabled] = useState(true);\n  const [audio, setAudio] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n\n  const playAudio = (src) => {\n    if (audio) {\n      audio.pause();\n    }\n    const newAudio = new Audio(src);\n    newAudio.play();\n    setAudio(newAudio);\n  };\n\n  const stopAudio = () => {\n    if (audio) {\n      audio.pause();\n      setAudio(null);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (audio) {\n        audio.pause();\n      }\n    };\n  }, [audio]);\n\n  const questions = [\n    { id: 1, question: 'What is the name of this insect?', image: antImg, answer: 'Ant' },\n    { id: 2, question: 'What is the name of this insect?', image: beetleImg, answer: 'Beetle' },\n    { id: 3, question: 'What is the name of this insect?', image: butterflyImg, answer: 'Butterfly' },\n    { id: 4, question: 'What is the name of this insect?', image: dragonflyImg, answer: 'Dragonfly' },\n    { id: 5, question: 'What is the name of this insect?', image: spiderImg, answer: 'Spider' },\n    { id: 6, question: 'What is the name of this insect?', image: beeImg, answer: 'Bee' },\n    { id: 7, question: 'What is the name of this insect?', image: flyImg, answer: 'Fly' },\n    { id: 8, question: 'What is the name of this insect?', image: ladybirdImg, answer: 'Ladybird' },\n    { id: 9, question: 'What is the name of this insect?', image: wormImg, answer: 'Worm' },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n\n  const generateRandomQuestion = useCallback(() => {\n    let newQuestion;\n    do {\n      newQuestion = questions[Math.floor(Math.random() * questions.length)];\n    } while (currentQuestion && newQuestion.id === currentQuestion.id);\n    setQuestion(newQuestion.question);\n    setResult('');\n    setInputValue('');\n    setCurrentQuestion(newQuestion);\n    setIsCheckDisabled(true);\n    return newQuestion;\n  }, [currentQuestion]);\n\n  useEffect(() => {\n    const newQuestion = generateRandomQuestion();\n    setCurrentQuestion(newQuestion);\n  }, []);\n\n  useEffect(() => {\n    if (result !== '') {\n      const timer = setTimeout(() => {\n        const newQuestion = generateRandomQuestion();\n        setCurrentQuestion(newQuestion);\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [result, generateRandomQuestion]);\n\n  const checkAnswer = () => {\n    if (!currentQuestion) {\n      return;\n    }\n    const currentImage = currentQuestion.image;\n    const correctAnswer = currentQuestion.answer.toUpperCase();\n    const isCorrectAnswer = inputValue.toLowerCase() === correctAnswer.toLowerCase();\n    if (isCorrectAnswer) {\n      setInputValue('Correct!')\n      setCorrectCount(correctCount + 1);\n      new Audio(correctSound).play();\n          setTimeout(() => {\n            setResult(\"\");\n            }, 2000);\n    } else {\n      setInputValue(`Incorrect. The answer is ${correctAnswer}.`);\n      setIncorrectCount(incorrectCount + 1);\n      new Audio(incorrectSound).play();\n      setTimeout(() => {\n      setResult(\"\");\n    }, 2000);\n    }\n\n    setShowResult(true); \n    setTimeout(() => {\n      setShowResult(false);\n      generateRandomQuestion();\n    }, 2000);\n\n    const checkButton = document.querySelector('.Check');\n    if (checkButton && checkButton.classList) {\n      checkButton.classList.add('disabled');\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const previousValue = inputValue;\n    const newValue = event.target.value;\n\n    setInputValue(newValue);\n    setIsCheckDisabled(false);\n\n    if (newValue.length > previousValue.length) {\n      const newLetter = newValue.slice(-1).toUpperCase();\n      playLetterSound(newLetter);\n    }\n  };\n\n  const playLetterSound = async (letter) => {\n    const audioPath = await import(`../sounds/${letter}.mp3`);\n    new Audio(audioPath.default).play();\n  };\n\n  const handleKeyPress = useCallback(\n    throttle((event) => {\n      if (inputValue === '') {\n        return;\n      }\n      const keyPressed = event.key.toUpperCase();\n      const lastLetter = inputValue.slice(-1).toUpperCase();\n\n      if (keyPressed === lastLetter) {\n        const newInputValue = inputValue.slice(0, -1);\n        setInputValue(newInputValue);\n        checkAnswer();\n        playLetterSound(lastLetter);\n      } else {\n        playLetterSound(keyPressed);\n      }\n    }, 300),\n    [inputValue, checkAnswer, playLetterSound]\n  );\n\n  const addLetter = (letter) => {\n    setInputValue(inputValue + letter);\n    setIsCheckDisabled(false);\n    playLetterSound(letter);\n  };\n\n  const eraseLetter = () => {\n    setInputValue(inputValue.slice(0, -1));\n    setIsCheckDisabled(false);\n  };\n\n  const nextQuestion = () => {\n    generateRandomQuestion();\n  };\n\n  return (\n    <>\n      <div className=\"PhonicsGame\">\n        <h1 className=\"Title\">Minibeast Phonics</h1>\n        <div>\n          <div className=\"BodyText\">{question}</div>\n          {currentQuestion && (\n            <img src={currentQuestion.image} alt=\"Insect\" key={currentQuestion.id} />\n          )}\n          <div className=\"input-check-container\">\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              onKeyDown={(e) => e.key === 'Enter' && checkAnswer()}\n              placeholder=\"Enter answer\"\n            />\n            {showResult && ( \n              <div className=\"result\">{result}</div>\n            )}\n            <button\n              className=\"Check\"\n              onClick={checkAnswer}\n              onMouseEnter={() => playAudio(process.env.PUBLIC_URL + '/sounds/check.mp3')}\n              onMouseLeave={stopAudio}\n            >\n              Check\n            </button>\n          </div>\n\n          <div className=\"buttons-container\">\n            {'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map((letter) => (\n              <button key={letter} onClick={() => addLetter(letter)}>\n                {letter}\n              </button>\n            ))}\n            <button\n              className=\"Erase\"\n              onClick={eraseLetter}\n              onMouseEnter={() => playAudio(process.env.PUBLIC_URL + '/sounds/erase.mp3')}\n              onMouseLeave={stopAudio}\n            >\n              Erase\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"score\">\n        <div>\n          Correct: {correctCount}  |  Incorrect: {incorrectCount}\n        </div>\n      </div>\n      <div className=\"start-button-container\">\n        <button\n          className=\"start-button\"\n          onClick={nextQuestion}\n          onMouseEnter={() => playAudio(process.env.PUBLIC_URL + '/sounds/new_question.mp3')}\n          onMouseLeave={stopAudio}\n        >\n          New question\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default PhonicsGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}